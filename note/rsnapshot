# how to rsnapshot
# do NOT enter comments after elements in rsnapshot.conf, it kills rsync!

# /etc/rsnapshot.conf
# https://wiki.archlinux.org/index.php/System_maintenance
# https://wiki.archlinux.org/index.php/Rsync
# https://wiki.archlinux.org/index.php/Rsnapshot
# https://linux.die.net/man/1/rsync
# https://wiki.archlinux.org/index.php/Cron

# When you have made all your changes, you should verify that the config file is syntactically valid, and that all the supporting programs are where you think they are. To do this, run rsnapshot with the configtest argument:
# If all is well, it should say Syntax OK. If there's a problem, it should tell you exactly what it is. Make sure your config file is using tabs and not spaces, etc.

$ rsnapshot configtest

# The final step to test your configuration is to run rsnapshot in test mode. This will print out a verbose list of the things it will do, without actually doing them. To do a test run, run this command:

$ rsnapshot -t hourly

# perform manually once
 systemctl start rsnapshot@hourly

# automate and start immediately
 systemctl enable --now rsnapshot-hourly.timer


# Automation
# Now that you have your config file set up, it's time to set up rsnapshot to be run automatically.

# First create a service file:
# /etc/systemd/system/rsnapshot@.service

[Unit]
Description=rsnapshot (%I) backup

[Service]
Type=oneshot
Nice=19
IOSchedulingClass=idle
ExecStart=/usr/bin/rsnapshot %I

# Then create a timer unit for it:
# /etc/systemd/system/rsnapshot-daily.timer

[Unit]
Description=rsnapshot daily backup

[Timer]
# 14:30 is the clock time when to start it
OnCalendar=14:30
Persistent=true
Unit=rsnapshot@daily.service

[Install]
WantedBy=timers.target

# Hourly timer unit:
# /etc/systemd/system/rsnapshot-hourly.timer

[Unit]
Description=rsnapshot hourly backup

[Timer]
# Time to wait after booting before we run first time
OnBootSec=10m
# Time between running each consecutive time
OnUnitActiveSec=1h
Unit=rsnapshot@hourly.service

[Install]
WantedBy=timers.target